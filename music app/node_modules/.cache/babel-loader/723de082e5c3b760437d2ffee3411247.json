{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilarora/Desktop/React Music App/music app/src/component/Songs.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Dialog from './Dialog';\nconst API_KEY = '08a13424cb2130db2294fd410cfae1ff';\n\nclass Songs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      songData: \"\",\n      isActive: false,\n      artistData: \"\"\n    };\n\n    this.toggleModal = async mbid => {\n      const api_call = await fetch(\"http://ws.audioscrobbler.com/2.0/?method=track.getInfo&api_key=\".concat(API_KEY, \"&mbid=\").concat(mbid, \"&format=json\"));\n      const data = await api_call.json();\n      this.setState({\n        songData: data.track,\n        isActive: !this.state.isActive\n      });\n    };\n\n    this.toggleArtistModal = async mbid => {\n      const api_call = await fetch(\"http://ws.audioscrobbler.com/2.0/?method=artist.getInfo&api_key=\".concat(API_KEY, \"&mbid=\").concat(mbid, \"&format=json\"));\n      const data = await api_call.json();\n      console.log(data);\n      this.setState({\n        artistData: data,\n        isActive: !this.state.isActive\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isActive: !this.state.isActive\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      song: this.state.songData,\n      closeModal: this.closeModal,\n      isActive: this.state.isActive,\n      toggleModal: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.songs.map(song => {\n      return React.createElement(\"div\", {\n        key: song.url,\n        style: {\n          width: '25%',\n          float: 'left',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        src: song.image[2]['#text'],\n        alt: \"\",\n        onClick: e => this.toggleModal(song.mbid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, song.name)), React.createElement(\"p\", {\n        onClick: e => this.toggleArtistModal(song.mbid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, song.artist.name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default Songs;","map":{"version":3,"sources":["/Users/nikhilarora/Desktop/React Music App/music app/src/component/Songs.js"],"names":["React","Component","Dialog","API_KEY","Songs","state","songData","isActive","artistData","toggleModal","mbid","api_call","fetch","data","json","setState","track","toggleArtistModal","console","log","closeModal","render","props","songs","map","song","url","width","float","textAlign","cursor","image","e","name","artist"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Dialog from './Dialog';\n\nconst API_KEY = '08a13424cb2130db2294fd410cfae1ff';\n\nclass Songs extends Component {\n\n    state = {\n        songData: \"\",\n        isActive: false,\n        artistData: \"\"\n    }\n\n    toggleModal = async(mbid) => {\n        const api_call = await fetch(`http://ws.audioscrobbler.com/2.0/?method=track.getInfo&api_key=${ API_KEY }&mbid=${ mbid }&format=json`);\n        \n        const data = await api_call.json();\n\n        this.setState({\n            songData: data.track,\n            isActive: !this.state.isActive\n        });\n    }\n\n    toggleArtistModal = async(mbid) => {\n        const api_call = await fetch(`http://ws.audioscrobbler.com/2.0/?method=artist.getInfo&api_key=${ API_KEY }&mbid=${ mbid }&format=json`);\n        \n        const data = await api_call.json();\n\n        console.log(data);\n\n        this.setState({\n            artistData: data,\n            isActive: !this.state.isActive\n        });\n    }\n\n    closeModal = () => {\n        this.setState({\n            isActive: !this.state.isActive\n        })\n    }\n\n    render() {\n        return (\n\n            <section>\n\n                <Dialog song = { this.state.songData } closeModal = { this.closeModal} isActive = { this.state.isActive } toggleModal = { this.toggleModal } />\n\n                <div className = \"container\">\n\n                    { this.props.songs.map((song) => {\n\n                        return(\n                            \n                            <div key = { song.url } style = {{ width: '25%', float: 'left', textAlign: 'center' }}>\n                            \n                                <img style={{ cursor: \"pointer\" }} src = { song.image[2]['#text'] } alt=\"\" onClick = {(e) => this.toggleModal(song.mbid)} />\n                                \n                                \n\n                                <br /><br />\n                                <p><b>{ song.name }</b></p>\n\n                                <p onClick = {(e) => this.toggleArtistModal(song.mbid)}>{ song.artist.name }</p>\n\n                                <br /><br />\n\n                            </div>\n\n                        )\n\n                    })}\n\n                </div>\n            \n            </section>\n\n        )\n    }\n}\n\nexport default Songs;"]},"metadata":{},"sourceType":"module"}