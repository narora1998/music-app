{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilarora/Desktop/React Music App/music app/src/component/Dialog.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\n\nclass Dialog extends Component {\n  componentDidMount() {\n    Modal.setAppElement('body');\n  }\n\n  render() {\n    if (this.props.song && this.props.song.album) {\n      return React.createElement(Modal, {\n        isOpen: this.props.isActive,\n        onRequestClose: this.props.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          border: \"1px solid black\"\n        },\n        alt: \"\",\n        src: this.props.song.album.image[3][\"#text\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.props.song.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Album:\"), \" \", React.createElement(\"span\", {\n        style: {\n          color: \"rgb(255, 136, 0)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.props.song.album.title), React.createElement(\"b\", {\n        style: {\n          paddingLeft: \"5%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Artist:\"), \" \", React.createElement(\"span\", {\n        style: {\n          color: \"rgb(255, 136, 0)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.props.song.artist.name)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: \"rgb(255,136,0)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.song.listeners), \" listeners\", React.createElement(\"span\", {\n        style: {\n          color: \"rgb(255,136,0)\",\n          paddingLeft: \"5%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.song.playcount), \" playcounts\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.props.song.toptags.tag.map(tag => {\n        return React.createElement(\"span\", {\n          key: tag.url,\n          className: \"tag\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, tag.name);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), \"Published On: \", React.createElement(\"span\", {\n        style: {\n          color: \"rgb(255, 136, 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.props.song.wiki.published), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          width: \"75%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.props.song.wiki.summary)), React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"red\",\n          color: \"white\",\n          padding: \"1%\",\n          width: \"15%\"\n        },\n        onClick: this.props.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Close\")));\n    } else {\n      return React.createElement(Modal, {\n        isOpen: this.props.isActive,\n        onRequestClose: this.props.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Track Not Found\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"red\",\n          color: \"white\",\n          padding: \"1%\",\n          width: \"15%\"\n        },\n        onClick: this.props.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Close\")));\n    }\n  }\n\n}\n\nexport default Dialog;","map":{"version":3,"sources":["/Users/nikhilarora/Desktop/React Music App/music app/src/component/Dialog.js"],"names":["React","Component","Modal","Dialog","componentDidMount","setAppElement","render","props","song","album","isActive","closeModal","textAlign","border","image","name","color","title","paddingLeft","artist","listeners","playcount","toptags","tag","map","url","wiki","published","width","summary","backgroundColor","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-modal';\n\nclass Dialog extends Component {\n\n    componentDidMount() {\n        Modal.setAppElement('body');\n    }\n\n    render() {\n        if(this.props.song && this.props.song.album) {\n            return(\n\n                <Modal isOpen={this.props.isActive} onRequestClose={this.props.closeModal}>\n\n                <div style={{ textAlign: \"center\" }}>\n\n                    <img style={{ border: \"1px solid black\" }} alt=\"\" src={ this.props.song.album.image[3][\"#text\"] } />\n                    <br /><br />\n                    <h4>{ this.props.song.name }</h4>\n\n                    <p>\n                        <b>Album:</b> <span style={{ color: \"rgb(255, 136, 0)\" }}>{ this.props.song.album.title }</span>\n\n                        <b style={{ paddingLeft: \"5%\" }}>Artist:</b> <span style={{ color: \"rgb(255, 136, 0)\" }}>{ this.props.song.artist.name }</span>\n                    </p>\n\n                    <br />\n\n                    <p>\n\n                        <span style={{ color: \"rgb(255,136,0)\" }}>{ this.props.song.listeners }</span> listeners\n                        \n                        <span style={{ color: \"rgb(255,136,0)\", paddingLeft: \"5%\" }}>{ this.props.song.playcount }</span> playcounts\n                        \n                    </p>\n\n                    <br />\n\n                    <div>\n\n                        {this.props.song.toptags.tag.map((tag) => {\n                            return (\n                                <span key={ tag.url } className=\"tag\">{ tag.name }</span>\n                            )\n                        })}\n\n                    </div>\n\n                    <br />\n                    <br />\n\n                    Published On: <span style={{ color: \"rgb(255, 136, 0\" }}>{ this.props.song.wiki.published }</span>\n                    \n                    <br /><br />\n\n                    <center><p style={{ width: \"75%\" }}>\n                        { this.props.song.wiki.summary }\n                    </p></center>\n\n                    <button style={{ backgroundColor: \"red\", color: \"white\", padding: \"1%\", width: \"15%\" }} onClick={ this.props.closeModal }>Close</button>\n                \n                </div>\n\n            </Modal>\n\n            )\n        } else {\n            return (\n\n                <Modal isOpen={this.props.isActive} onRequestClose={this.props.closeModal}>\n\n                    <br/><br/><br/>\n\n                    <h1 style={{ textAlign: \"center\" }}>Track Not Found</h1>\n\n                    <br/><br/><br/>\n                    \n                    <center><button style={{ backgroundColor: \"red\", color: \"white\", padding: \"1%\", width: \"15%\" }} onClick={ this.props.closeModal }>Close</button></center>\n\n                </Modal>\n\n            )\n        }\n    }\n\n}\n\nexport default Dialog;"]},"metadata":{},"sourceType":"module"}